name: "Raspbian Sysroot"
description: "Prepare Raspbian sysroot for cross-compiling"

inputs:
  sysroot:
    description: "Location of sysroot"
    default: "/opt/pi-sysroot"
    required: true
  release:
    description: "Raspbian release"
    default: "bullseye"
    required: true
  packages:
    description: "Packages to install for sysroot"
    default: ""
    required: false
  basefs:
    description: "Path to cached basefs archive"
    default: /tmp/pi-debootstrap-basefs.tar.gz
    required: false

runs:
  using: "composite"
  steps:
    - name: Write Packages List
      shell: bash
      run: |
        echo ${{ inputs.packages }} > _pi_sysroot_packages_${{ github.sha }}.list

    - name: Cache Sysroot
      uses: actions/cache@v2
      id: cache-sysroot
      with:
        path: |
          ${{ inputs.sysroot }}/bin
          ${{ inputs.sysroot }}/lib
          ${{ inputs.sysroot }}/opt
          ${{ inputs.sysroot }}/usr
        key: sysroot-${{ inputs.release }}-${{ hashFiles('_pi_sysroot_packages_*.list') }}

    - name: Cache Base Filesystem
      if: steps.cache-sysroot.outputs.cache-hit != 'true'
      uses: actions/cache@v2
      id: cache-basefs
      with:
        path: ${{ inputs.basefs }}
        key: basefs-${{ inputs.release }}

    - name: Update packages
      if: steps.cache-sysroot.outputs.cache-hit != 'true'
      shell: bash
      run: sudo apt-get -yq update || true

    - name: Prepare Base System
      if: steps.cache-sysroot.outputs.cache-hit != 'true'
      shell: bash
      env:
        SYSROOT: ${{ inputs.sysroot }}
        RELEASE: ${{ inputs.release }}
        ARCHIVE: ${{ inputs.basefs }}
      run: |
        ls "${{ github.action_path }}"
        sudo bash "${{ github.action_path }}/basefs.sh"

    - name: Setup Sysroot
      if: steps.cache-sysroot.outputs.cache-hit != 'true'
      shell: bash
      env:
        SYSROOT: ${{ inputs.sysroot }}
        RELEASE: ${{ inputs.release }}
        PACKAGES: ${{ inputs.packages }}
      working-directory: ${{ github.action_path }}
      run: |
        sudo chroot "$SYSROOT" /bin/bash < sysroot.sh
        sudo cp toolchain.cmake "$SYSROOT"